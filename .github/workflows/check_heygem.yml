name: Sync heygem

on:
  schedule:
    - cron: '0 */6 * * *'  # 每小时运行一次
  workflow_dispatch:      # 可手动触发

env:
  IMAGE_NAME: guiji2025/heygem.ai

jobs:
  sync-image:
    runs-on: ubuntu-latest
    environment: actions 

    steps:
      - name: Checkout repo with LFS
        uses: actions/checkout@v4
      #   with:
      #     lfs: true

      # - name: Install Git LFS
      #   run: git lfs install

      - name: Pull Docker image and get digest
        run: |
          docker pull $IMAGE_NAME:latest > docker_pull.log
          digest=$(grep "Digest:" docker_pull.log | awk '{print $2}')
          echo "digest=$digest" >> $GITHUB_ENV

      - name: Check for digest change
        id: check
        run: |
          DIGEST_FILE=".last_digest"
          if [ -f "$DIGEST_FILE" ] && grep -q "${{ env.digest }}" "$DIGEST_FILE"; then
            echo "changed=false" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "${{ env.digest }}" > "$DIGEST_FILE"
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Extract /code from Docker image
        if: steps.check.outputs.changed == 'true'
        run: |
          container_id=$(docker create --entrypoint /bin/sh $IMAGE_NAME:latest)
          docker cp "$container_id":/code ./extracted_code
          docker rm "$container_id"

      - name: Package code as tar.gz
        run: |
          tar -czf heygem.tar.gz extracted_code

      - name: Upload as GitHub Release asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: heygem-gen-video-$(date +'%Y%m%d%H%M')
          name: "Code package $(date +'%Y-%m-%d %H:%M')"
          files: heygem.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push code with LFS to GitHub
        if: steps.check.outputs.changed == 'true'
        run: |
          # rm -rf code && mv extracted_code/code code
          # git lfs track "*.onnx" "*.pth" "*.pt" "*.so" || true
          echo "${{ env.digest }}" > .last_digest
          git add .gitattributes .last_digest
          git config user.name github-actions
          git config user.email github-actions@users.noreply.github.com
          git commit -m "Update code from image @ digest ${{ env.digest }}" || echo "No changes"
          git push origin HEAD || echo "Push skipped"

      - name: Login to Aliyun Docker Registry
        if: steps.check.outputs.changed == 'true'
        run: |
          echo "${{ secrets.ALIYUN_PASSWORD }}" | docker login registry.cn-hangzhou.aliyuncs.com \
            --username "${{ secrets.ALIYUN_USERNAME }}" --password-stdin

      - name: Tag and Push image to Aliyun
        if: steps.check.outputs.changed == 'true'
        run: |
          DATE=$(date +%Y%m%d)
          TARGET_TAG="registry.cn-hangzhou.aliyuncs.com/wangshaojie/heyg-gem:$DATE"
          docker tag $IMAGE_NAME:latest "$TARGET_TAG"
          docker push "$TARGET_TAG"
          echo "tagged_image=$TARGET_TAG" >> $GITHUB_ENV

      - name: Send WeChat Notification
        if: steps.check.outputs.changed == 'true'
        run: |
          MSG="✅ 镜像已更新\n\n🔹 源镜像: $IMAGE_NAME:latest\n📁 代码已推送 GitHub（含 LFS）\n📦 镜像已推送至: ${{ env.tagged_image }}"
          curl -s -X POST "${{ secrets.WECHAT_WEBHOOK }}" \
            -H 'Content-Type: application/json' \
            -d '{
              "msgtype": "text",
              "text": { "content": "'"$MSG"'" }
            }'
